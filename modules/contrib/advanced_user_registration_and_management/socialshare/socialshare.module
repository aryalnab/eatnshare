<?php

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Drupal\node\Entity\Node;

/**
 * Get default values of sharing/counter networks.
 *
 * @param string $key sharing/counter key
 * @return array default sharing/counter networks
 */
function default_sharing_networks($key) {
  if ($key == 'share_rearrange_providers' || $key == 'share_vertical_rearrange_providers') {
    return array("facebook", "googleplus", "google", "pinterest", "twitter");
  }
  return array(
    "Facebook Like",
    "Google+ +1",
    "Pinterest Pin it",
    "LinkedIn Share"
  );
}

/**
 * Implements hook_theme().
 *
 * @return array
 */
function socialshare_theme() { 
  $path = drupal_get_path('module', 'socialshare') . '/theme';
  return array(
    'social_share' => array(
      'variables' => array(
        'node' => NULL,
      ),
      'template' => 'social_share',
      'path' => $path,

    ),
  );
}

/**
 * Get horizontal Sharing Div.
 *
 * @return string
 */
function horizontal_sharing_div() {  
  $config = \Drupal::config('socialshare.settings');
  $socialsharing_horizontal_images = $config->get('horizontal_images');
 
  if (in_array($socialsharing_horizontal_images, array('8', '9'))) {
    return 'open-social-counter-simplebox';
  }
  else {
    return 'os-share-widget-interface';
  }
}

/**
 * Get Vertical Sharing Div.
 *
 * @return string
 */
function vertical_sharing_div() {   
  $config = \Drupal::config('socialshare.settings');
  $socialsharing_vertical_images = $config->get('vertical_images');

  if ($socialsharing_vertical_images == '4' || $socialsharing_vertical_images == '5') {
    return 'open-social-share-vertical-container';
  }
  else {
    return 'open-social-counter-vertical-simplebox';
  }
}

/**
 * Implements hook_node_view().
 *
 * @param array $build
 * @param EntityInterface $node
 * @param EntityViewDisplayInterface $display
 * @param $view_mode
 */
function socialshare_node_view(array &$build, EntityInterface $node, EntityViewDisplayInterface $display, $view_mode){
  $config = \Drupal::config('socialshare.settings');  
  $h_output = "";
  $v_output = "";
  $shareall_withexcept = $config->get('show_pages');
  $node_withexcept = $config->get('show_exceptpages');
  $node_except = explode(',', $node_withexcept);
  $vertical_shareall_withexcept = $config->get('vertical_show_pages');
  $vertical_node_withexcept = $config->get('vertical_show_exceptpages');
  $vertical_node_except = explode(',', $vertical_node_withexcept);
  $share_title = '';
  $item_summary = '';
  $item_summary = isset($node->body->summary) && !empty($node->body->summary) ? $node->body->summary :'';   
  if (empty($item_summary ) && !empty($node->body->value)) { 
    $item_summary = strip_tags(substr($node->body->value, 0, 500));   
    $item_summary = trim(str_replace(array('<script>', '</script>', '"'), array('', '', "'"), $item_summary));
    $item_summary = preg_replace('/[\t]+/', '', preg_replace('/[\r\n]+/', " ", $item_summary));
  }  
 
  $item_image = '';
  if(isset($node->field_image->entity) && is_object($node->field_image->entity)){
  $imagepath = $node->field_image->entity->url(); 
  $item_image = isset($imagepath) && !empty($imagepath) ? $imagepath :'';
  }
  
  if ($config->get('enable_horizontal') == 1) {
      if ($shareall_withexcept == 0) {    
        if (!in_array($node->id(), $node_except) AND !in_array($node->getTitle(), $node_except)) {
          $share_title = $config->get('label');
          $h_output = horizontal_sharing_div();
        }
      }
      elseif ($shareall_withexcept == 1) {
        if (in_array($node->id(), $node_except) OR in_array($node->getTitle(), $node_except)) {
          $share_title = $config->get('label');
          $h_output = horizontal_sharing_div();
        }
      }
    
  global $base_root;
  $current_url = $base_root . $_SERVER['REQUEST_URI'];

    if ($config->get('position_top') == 1) {
      $build['socialshare_top'] = array(
        '#theme' => 'social_share',
        '#weight' => -10,
        '#node' => array('class' => $h_output, 'currenturl' => $current_url, 'description' => $item_summary, 'image' => $item_image, 'type' => 'horizontal', 'title' => $share_title),
      );   
    }

    if ($config->get('position_bottom') == 1) { 
      $build['socialshare_bottom'] = array(
        '#theme' => 'social_share',
        '#weight' => 101,
        '#node' => array('class' => $h_output, 'currenturl' => $current_url, 'description' => $item_summary, 'image' => $item_image, 'type' => 'horizontal', 'title' => $share_title),
      );
    }
  }  
  
  if ($config->get('enable_vertical') == 1) {
      if ($vertical_shareall_withexcept == 0) {
        if (!in_array($node->id(), $vertical_node_except) AND !in_array($node->getTitle(), $vertical_node_except)) {
          $v_output = vertical_sharing_div();
        }
      }
      elseif ($vertical_shareall_withexcept == 1) {
        if (in_array($node->id(), $vertical_node_except) OR in_array($node->getTitle(), $vertical_node_except)) {
          $v_output = vertical_sharing_div();
        }
      } 

      $position1 = 'bottom';
      $position2 = 'right';
      if ($config->get('vertical_position') == '0') {
        $position1 = 'top';
        $position2 = 'left';
      }
      elseif ($config->get('vertical_position') == '1') {
        $position1 = 'top';
        $position2 = 'right';
      }
      elseif ($config->get('vertical_position') == '2') {
        $position1 = 'bottom';
        $position2 = 'left';
      }
    $build['socialshare_vertical'] = array(
      '#theme' => 'social_share',
      '#weight' => 10,
      '#node' => array('class' => $v_output, 'currenturl' => $current_url, 'description' => $item_summary, 'image' => $item_image, 'style' => "position:fixed;".$position1.":0px;".$position2.":0px;", 'type' => 'vertical'),
    );
  }
}

/**
 * Implements pop up window option. 
 */
function socialshare_popup_window_size(){      
  $config = \Drupal::config('socialshare.settings');
  $popup_window = '';
  $popupVal = $config->get('opensocialshare_popup_window');
  $height = $config->get('opensocialshare_popup_window_size_height');
  $width = $config->get('opensocialshare_popup_window_size_width');
  
  if ($popupVal!= 0 && !empty($height) && !empty($width)) {
    $popup_window = '{height:' . $height . ',width:' . $width . '}';
  }   
  return $popup_window;
}

/**
 *  Horizontal Social Sharing Script code.
 */
function horizontal_script_code() {   
  $config = \Drupal::config('socialshare.settings'); 
  $share_rearrange = $config->get("share_rearrange");
  $horizontal_image = $config->get('horizontal_images');

  if (empty($share_rearrange)) {   
     $share_rearrange = default_sharing_networks('share_rearrange_providers');       
  } 
 
 
  $defaultsettings = array(  
      'horizontal' => TRUE, 
      'providers' => implode(",", $share_rearrange),      
      'widgets' => implode(",", $config->get('counter_providers')), 
      'isHorizontalLayout' => 1, // 0 or 1 - vertical layout or horizontal layout      
      'emailMessage' => $config->get('opensocialshare_email_message'),
      'emailSubject' => $config->get('opensocialshare_email_subject'),
      'isEmailContentReadOnly' => $config->get('opensocialshare_is_email_content_read_only'),          
      'theme' => 'OpenSocialShareDefaultTheme',
      'isShortenUrl' => $config->get('opensocialshare_is_shorten_url'), 
      'facebookAppId' => $config->get('opensocialshare_facebook_app_id'), 
      'isTotalShare' => $config->get('opensocialshare_is_total_share'),
      'isOpenSingleWindow' => $config->get('opensocialshare_is_open_single_window'),  
      'twittermention' => $config->get('opensocialshare_twitter_mention'),   
      'twitterhashtag' => $config->get('opensocialshare_twitter_hash_tags'), 
      'popupWindowSize' => socialshare_popup_window_size(),
      'isMobileFriendly' => $config->get('opensocialshare_is_mobile_friendly'),
      'customOption' => $config->get('opensocialshare_custom_options'),
    );
    if (in_array($horizontal_image, array('8', '9'))) {

    $counter_providers = $config->get('counter_providers');

    if (empty($counter_providers)) {
      $config->set('counter_providers', default_sharing_networks('counter_providers'));
    }

    $counter = 1;
    if ($config->get('horizontal_images') == '8') {
      $counter = 0;
    }    
    $horizontalsettings = array(    
      'divwidget' => 'open-social-counter-simplebox',   
      'isCounterWidgetTheme' => 1, // 0 or 1 - standard themes or counter widget themes
      'isHorizontalCounter' => $counter, // 0 or 1 - counter on top or counter to right - counter themes only 
      'widgetIconSize' => "32", // "16" or "32" - 16px or 32px standard themes only
      'widgetStyle' => "image" //"image", "square" or "responsive" - standard themes only     
    );
  }
  else {
    $interface = 'square';   
    if ($horizontal_image == '2' || $horizontal_image == '3') {       
      $interface = 'image';
    }
    elseif ($horizontal_image == '10') {         
      $interface = 'responsive';
    }
    $size = '32';
    if (in_array($horizontal_image, array('1', '3', '8', '9'))) {         
      $size = '16';
    } 
    
    $horizontalsettings = array(           
      'divwidget' => 'os-share-widget-interface',   
      'isCounterWidgetTheme' => 0, // 0 or 1 - standard themes or counter widget themes
      'isHorizontalCounter' => 0, // 0 or 1 - counter on top or counter to right - counter themes only
      'widgetIconSize' => $size, // "16" or "32" - 16px or 32px standard themes only
      'widgetStyle' => $interface //"image", "square" or "responsive" - standard themes only    
    ); 
  }
  $mysettings = array_merge($defaultsettings, $horizontalsettings); 
  return $mysettings;
}

/**
 * Vertical Social Sharing Script code.
 */
function vertical_script_code() {
  $config = \Drupal::config('socialshare.settings');
  $vertical_share_rearrange = $config->get("vertical_share_rearrange");
  if (empty($vertical_share_rearrange)) {   
     $vertical_share_rearrange = default_sharing_networks('share_vertical_rearrange_providers');   
  } 

   $defaultsettings = array(
      'vertical' => TRUE,         
      'vericalProviders' => implode(",", $vertical_share_rearrange), 
      'verticalWidgets' => implode(",", $config->get('vertical_counter_providers')),    
      'verticalIsHorizontalLayout' => 0, // 0 or 1 - vertical layout or horizontal layout
      'verticalEmailMessage' => $config->get('opensocialshare_email_message'),
      'verticalEmailSubject' => $config->get('opensocialshare_email_subject'),
      'verticalIsEmailContentReadOnly' => $config->get('opensocialshare_is_email_content_read_only'),          
      'verticalTheme' =>  'OpenSocialShareDefaultTheme',  
      'verticalIsShortenUrl' => $config->get('opensocialshare_is_shorten_url'), 
      'verticalFacebookAppId' => $config->get('opensocialshare_facebook_app_id'),
      'verticalIsTotalShare' => $config->get('opensocialshare_is_total_share'),
      'verticalIsOpenSingleWindow' => $config->get('opensocialshare_is_open_single_window'),     
      'verticalTwitterMention' => $config->get('opensocialshare_twitter_mention'),   
      'verticalTwitterHashTag' => $config->get('opensocialshare_twitter_hash_tags'),        
      'verticalPopupWindowSize' => socialshare_popup_window_size(),       
      'verticalCustomOption' => $config->get('opensocialshare_custom_options'),
    );

  if ($config->get('vertical_images') == '4' || $config->get('vertical_images') == '5') {  

    $size = '16';
    if ($config->get('vertical_images') == '4') {
      $size = '32';
    }   
    $verticalsettings = array(                
      'verticalDivwidget' => 'open-social-share-vertical-container',                     
      'verticalIsCounterWidgetTheme' => 0, // 0 or 1 - standard themes or counter widget themes
      'verticalIsHorizontalCounter' => 0, // 0 or 1 - counter on top or counter to right - counter themes only
      'verticalWidgetIconSize' => $size, // "16" or "32" - 16px or 32px standard themes only
      'verticalWidgetStyle' => 'square' //"image", "square" or "responsive" - standard themes only      
    );
  }
  
  else {  
    $counter_providers = $config->get('vertical_counter_providers');

    if (empty($counter_providers)) {
      $config->set('vertical_counter_providers', default_sharing_networks('vertical_counter_providers'));
    }
    $counter = 1;
    if ($config->get('vertical_images') == '6') {
       $counter = 0;
    }    
    $verticalsettings = array(         
      'verticalDivwidget' => 'open-social-counter-vertical-simplebox',                      
      'verticalIsCounterWidgetTheme' => 1, // 0 or 1 - standard themes or counter widget themes
      'verticalIsHorizontalCounter' => $counter, // 0 or 1 - counter on top or counter to right - counter themes only
      'verticalWidgetIconSize' => '16', // "16" or "32" - 16px or 32px standard themes only
      'verticalWidgetStyle' => 'image' //"image", "square" or "responsive" - standard themes only        
    );   
  }
  $mysettings = array_merge($defaultsettings, $verticalsettings);
  return $mysettings;
}

/**
 * Implements hook_page_attachments().
 */
function socialshare_page_attachments(&$page) {
  $config = \Drupal::config('socialshare.settings');
  $script = array();
  if ($config->get('enable_horizontal') == 1) {
    $script = array_merge($script, horizontal_script_code());
  }

  if ($config->get('enable_vertical') == 1) {
    $script = array_merge($script, vertical_script_code());
  }

  if ($script) {
    $page['#attached']['drupalSettings']['advanceopensocialshare'] = $script;
    $page['#attached']['library'][] = 'socialshare/drupal.socialshare_front';
  }
}
/**
 * Remove Links if Social Login module enabled.
 *
 * @param $links
 */
function socialshare_menu_links_discovered_alter(&$links) {
  if (\Drupal::moduleHandler()->moduleExists('sociallogin')) {
    unset($links['socialshare.settings_form']);
    $links['sociallogin.settings_form']['title'] = t('Social Login');
    $links['sociallogin.settings_form']['description'] = t('Configure your social login settings');
  }
}