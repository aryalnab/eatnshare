<?php

/**
 * @file
 * Install, update and uninstall functions for the Social Login module.
 */
/**
 * Implements hook_requirements().
 */
function sociallogin_requirements($phase) {
  $requirements = array();

  if ($phase == 'install') {
    if (!class_exists('\LoginRadiusSDK\LoginRadius')) {
      $requirements['sociallogin'] = [
        'description' => t('SocialLogin requires LoginRadius PHP SDK library. Make sure the library is installed via Composer. Check README.txt for installation instructions.'),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
  }

  return $requirements;
}

/**
 * Implements hook_schema().
 */
function sociallogin_schema() {
  $schema = array();
  if (!\Drupal\Core\Database\Database::getConnection()->schema()->tableExists('loginradius_mapusers')) {
  $schema['loginradius_mapusers'] = array(
    'description' => 'Stores Engage linked account information.',
    'fields' => array(
      'user_id' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'User ID of the user table.',
      ),
      'provider' => array(
        'type' => 'varchar',
        'length' => 30,
        'not null' => TRUE,
        'description' => 'The provider\'s machine name.',
      ),
      'provider_id' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The provider\'s unique id.',
      ),
    ),
  );  
  } 
  if (!\Drupal\Core\Database\Database::getConnection()->schema()->tableExists('loginradius_log')) {
  $schema['loginradius_log'] = array(
    'description' => 'Stores API Error/Success data information.',
    'fields' => array(
      'log_id' => array(
        'type' => 'serial',      
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'Log id of log table.',
      ),
      'api_url' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The API Url.',
      ),
      'request_type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The API Request.',
      ),
      'data' => array(
        'type' => 'text',       
        'not null' => TRUE,
        'description' => 'The API Data.',
      ),
      'response' => array(
        'type' => 'text',      
        'not null' => TRUE,
        'description' => 'The API Response.',
      ),
      'response_type' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The API Response type',
      ),     
      'timestamp' => array(
        'type' => 'int',
        'length' => 12,
        'not null' => TRUE,
        'description' => 'The created date time.',
      ),
    ),
    'primary key' => array('log_id'),
  );  
  } 
  return $schema;
}

